---
jobs:
- name: "global"
  interval: '5m'
  connections:
  - 'postgres://postgres@localhost/postgres?sslmode=disable'
  queries:
  - name: "running_queries"
    help: "Number of running queries"
    labels:
      - "datname"
      - "usename"
    values:
      - "count"
    query:  |
            SELECT datname::text, usename::text, COUNT(*)::float AS count
            FROM pg_stat_activity GROUP BY datname, usename;
  - name: "db_sizes"
    help: "Database Sizes"
    labels:
      - "dbname"
    values:
      - "dbsize"
    query:  |
            SELECT datname::text AS dbname, pg_database_size(datname)::float AS dbsize
            FROM pg_database WHERE datname NOT IN ('rdsadmin', 'template0', 'template1', 'postgres');
  - name: "replication_lag"
    help: "Replication Lag"
    labels:
      - "hostname"
    values:
      - "replication_lag"
    query:  |
            WITH lag AS ( 
            SELECT
            CASE
            WHEN pg_last_xlog_receive_location() = pg_last_xlog_replay_location() THEN 0
            ELSE EXTRACT (EPOCH FROM now() - pg_last_xact_replay_timestamp())
            END
            AS lag
            )
            SELECT
            split_part(inet_server_addr()::text, '/', 1) AS hostname,
            COALESCE(lag, 0)::float AS replication_lag
            FROM lag
- name: "mydb"
  interval: '5m'
  connections:
  - 'postgres://postgres@localhost/mydb?sslmode=disable'
  queries:
  - name: "pg_stat_user_tables"
    help: "Table stats"
    labels:
      - "schemaname"
      - "relname"
    values:
      - "seq_scan"
      - "seq_tup_read"
      - "idx_scan"
      - "idx_tup_fetch"
      - "n_tup_ins"
      - "n_tup_upd"
      - "n_tup_del"
      - "n_tup_hot_upd"
      - "n_live_tup"
      - "n_dead_tup"
      - "vacuum_count"
      - "autovacuum_count"
      - "analyze_count"
      - "autoanalyze_count"
    query:  |
            SELECT
              schemaname::text
            , relname::text
            , COALESCE(seq_scan, 0)::float AS seq_scan
            , COALESCE(seq_tup_read, 0)::float AS seq_tup_read
            , COALESCE(idx_scan, 0)::float AS idx_scan
            , COALESCE(idx_tup_fetch, 0)::float AS idx_tup_fetch
            , COALESCE(n_tup_ins, 0)::float AS n_tup_ins
            , COALESCE(n_tup_upd, 0)::float AS n_tup_upd
            , COALESCE(n_tup_del, 0)::float AS n_tup_del
            , COALESCE(n_tup_hot_upd, 0)::float AS n_tup_hot_upd
            , COALESCE(n_live_tup, 0)::float AS n_live_tup
            , COALESCE(n_dead_tup, 0)::float AS n_dead_tup
            , COALESCE(vacuum_count, 0)::float AS vacuum_count
            , COALESCE(autovacuum_count, 0)::float AS autovacuum_count
            , COALESCE(analyze_count, 0)::float AS analyze_count
            , COALESCE(autoanalyze_count, 0)::float AS autoanalyze_count
            FROM pg_stat_user_tables;
  - name: "pg_statio_user_tables"
    help: "IO Stats"
    labels:
      - "schemaname"
      - "relname"
    values:
      - "heap_blks_read"
      - "heap_blks_hit"
      - "idx_blks_read"
      - "idx_blks_hit"
    query:  |
            SELECT
              schemaname::text
            , relname::text
            , COALESCE(heap_blks_read, 0)::float AS heap_blks_read
            , COALESCE(heap_blks_hit, 0)::float AS heap_blks_hit
            , COALESCE(idx_blks_read, 0)::float AS idx_blks_read
            , COALESCE(idx_blks_hit, 0)::float AS idx_blks_hit
            FROM pg_statio_user_tables;
  - name: "pg_number_of_slow_queries"
    help: "Number of queries longer than 1 minute group by client address"
    labels:
      - "client_addr"
    values:
      - "num_query_slow"
    query:  |
            select 
            COALESCE(client_addr::text, '') as client_addr, 
            COALESCE(count(*), 0)::float as num_query_slow 
            from pg_stat_activity where state='active' and age(now(), query_start)>'1 minute' group by 1;
